@page "/vybaveni"
@using Ppt23.Client.Components;
@inject HttpClient Http

<head>
    <title>Vybavení nemocnice</title>
    <meta charset="utf-8" />
</head>
@if (seznamVybaveni is null)
{
    <div class="absolute right-1/2 bottom-1/2  transform translate-x-1/2 translate-y-1/2 ">
        <div class=" border-t-transparent border-solid animate-spin  rounded-full border-teal-600 border-8 h-16 w-16"></div>
    </div>
    return;
}
<body style="background-image:linear-gradient(rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7)), url(https://c1.wallpaperflare.com/preview/343/704/60/scissors-surgery-operating-room-emergency.jpg)"
      class="bg-cover bg-no-repeat h-screen">
    
    <div>
        <div class="mx-4 py-3 px-4">

            <button class="rounded bg-green-100 bold text-size-xl p-2 m-2">Generovat nové vybavení</button>
            <button class="rounded bg-green-500 bold text-size-xl p-2 m-2" @onclick="() => {newModel = new VybaveniVm(); isInNewMode = true;}">
                Nový záznam
            </button>

            <div class="grid grid-cols-6 auto-cols-max bg-slate-900 text-white p-2 rounded-t-lg text-center">

                <div>Název</div>
                <div>Cena</div>
                <div>Datum nákupu</div>
                <div>Datum poslední revize</div>
                <div>Potřebuje revizi</div>
                <div>Akce</div>

            </div>


            <div class="bg-white rounded-b-lg border-2 rounded-b-lg border-black border-collapse">

                @if (isInNewMode)
                {
                    ArgumentNullException.ThrowIfNull(newModel);

                    <VybaveRow IsInEditMode=true Vyb="newModel"
                           EditDoneCallback="() => {novaVybava(newModel); isInNewMode = false;}">

                        <div class="grid grid-cols-2 p-1">
                            <button type="submit" class="w-auto h-auto rounded border-2 border-black text-black m-1 p-1 bg-green-500 hover:bg-green-700">
                                Ok
                            </button>
                            <button type="button" @onclick="() => isInNewMode = false" class="w-auto rounded border-2 border-black text-black m-1 p-1 bg-yellow-500 hover:bg-yellow-700">
                                Zrušit
                            </button>
                        </div>
                    </VybaveRow>
                }

                @foreach (var vyb in seznamVybaveni)
                {
                    <VybaveRow Vyb="vyb"
                           SmazEventCallback="async () => await smazVybaveni(vyb)"
                           RevizeEventCallBack="async () =>{vyb.LASTREV = DateTime.Now; await upravitVybaveni(vyb);}"
                           EditDoneCallback="async (vyb) => await upravitVybaveni(vyb)">
                    </VybaveRow>

                }
            </div>
        </div>
    </div>
</body>

@code {
    List<VybaveniVm>? seznamVybaveni;
    VybaveniVm? newModel;
    bool isInNewMode;

    //public void noveVybaveni()
    //{
    //    VybaveniVm vybaveni = new VybaveniVm();
    //    seznamVybaveni.Add(vybaveni);
    //}

    public async Task novaVybava(VybaveniVm newEquipment)
    {
        newEquipment.LASTREV = DateTime.Now;
        var response = await Http.PostAsJsonAsync<VybaveniVm>("vybaveni", newEquipment);

        if (response.IsSuccessStatusCode)
        {
            seznamVybaveni = await Http.GetFromJsonAsync<List<VybaveniVm>>("/vybaveni");
            StateHasChanged();
        }
    }

    public async Task upravitVybaveni(VybaveniVm vyb)
    {
        var response = await Http.PutAsJsonAsync($"vybaveni/{vyb.Id}", vyb);

    }

    public async Task smazVybaveni(VybaveniVm vyb)
    {
        var response = await Http.DeleteAsync(String.Format("vybaveni/{0}", vyb.Id));

        if (response.IsSuccessStatusCode && seznamVybaveni != null)
        {
            seznamVybaveni.Remove(vyb);
            //"Úspěšně smazáno"
        }
        //"Smazání se nezdařilo";
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000);
        seznamVybaveni = await Http.GetFromJsonAsync<List<VybaveniVm>>("/vybaveni");

        if(seznamVybaveni is null)
        {
            return;
        }
    }
}
